name: ZenovaAPI Deploy

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    uses: ./.github/workflows/build.yml

  deploy:
    name: Create Release
    if: github.event_name == 'push' && github.ref_type == 'tag'
    needs: build
    # Todo: most of this is just modifying the tag string so we don't need to be on windows
    runs-on: windows-latest
    
    steps:
      # Necessary because github context doesn't contain branch info for tag pushes
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v5.1

      - name: Verify Push is on Default Branch
        if: steps.branch-name.outputs.is_default == 'true'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Tag not created on default branch')

      - name: Set Git Tag
        run: |
          if("${{ github.ref }}" -match "refs\/tags\/([0-9]+\.[0-9]+\.[0-9]+)")
          { echo ('ZA_TAG='+$matches.1) >> $env:GITHUB_ENV}

      - name: Grab all Artifacts 
        uses: actions/download-artifact@v3

      # There has to be a better way to do this
      - name: Grab Rcedit
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "https://github.com/electron/rcedit"
          file: "rcedit-x86.exe"

      - name: Update Version Resource
        if: env.ZA_TAG != null
        run: |
          .\rcedit-x86.exe ZenovaAPI.dll --set-file-version $env:ZA_TAG
        
      - name: Create Development Package
        uses: papeloto/action-zip@v1
        with:
          files: inc/ lib/
          dest: ZenovaAPI-dev.zip

      - name: Create Tagged Release
        if: env.ZA_TAG != null
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ZenovaAPI-dev.zip
            ZenovaAPI.dll